{"version":3,"sources":["webpack://gatsby-starter-glass/./src/components/tags.js","webpack://gatsby-starter-glass/./src/components/importScript.js","webpack://gatsby-starter-glass/./src/templates/post-template.js"],"names":["tags","map","tag","Tag","key","Link","to","str","match","x","toLowerCase","join","styled","resourceUrl","attrs","useEffect","script","document","createElement","src","Object","keys","forEach","attr","setAttribute","async","body","appendChild","removeChild","Isso","props","issoHost","useImportScript","id","data","markdownRemark","frontmatter","excerpt","html","fields","prev","next","title","description","socialImage","social_image","publicURL","slug","PostWrapper","PostTitle","PostDate","date","PostContent","dangerouslySetInnerHTML","__html","PostPagination"],"mappings":"gKA0BA,IAfa,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACd,OACE,2BACGA,GACCA,EAAKC,KAAI,SAACC,GACR,OACE,gBAACC,EAAD,CAAKC,IAAKF,GACR,gBAAC,EAAAG,KAAD,CAAMC,GAAE,UAdDC,EAcwBL,EAbpCK,EACJC,MAAM,sEACNP,KAAI,SAACQ,GAAD,OAAOA,EAAEC,iBACbC,KAAK,OAU4CT,IAdlC,IAACK,OAwBrB,IAAMJ,EAAMS,qBAAH,qDAAGA,CAAH,6U,kICbT,EAdwB,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,OACrCC,gBAAU,WACR,IAAMC,EAASC,SAASC,cAAc,UAO1C,OANIF,EAAOG,IAAMN,EACbO,OAAOC,KAAKP,GAAS,IAAIQ,SAAQ,SAAAC,GAC7BP,EAAOQ,aAAaD,EAAMT,EAAMS,OAEpCP,EAAOS,OAAQ,EACfR,SAASS,KAAKC,YAAYX,GACvB,WACDC,SAASS,KAAKE,YAAYZ,MAE3B,CAACH,EAAaC,KCNbe,EAAO,SAAAC,GACX,IAAMC,EAAW,2BASjB,OAPAC,EAAgB,CACdnB,YAAgBkB,EAAL,kBACXjB,MAAO,CAAC,YAAaiB,EACb,4BAA4B,KAI/B,2BAASE,GAAG,iBA8CrB,EA3CqB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,EAA+CA,EAAKC,eAA5CC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,OAC9BC,EAAON,EAAKM,KACZC,EAAOP,EAAKO,KAElB,OACE,gBAAC,IAAD,CACEC,MAAON,EAAYM,MACnBC,YAAaP,EAAYO,aAAeN,EACxCO,YACER,EAAYS,aAAeT,EAAYS,aAAaC,UAAYP,EAAOQ,KAAO,gBAGhF,gBAACC,EAAD,KACE,+BACE,gBAACC,EAAD,KAAYb,EAAYM,OACxB,gBAACQ,EAAD,KAAWd,EAAYe,MAEvB,gBAACC,EAAD,CAAaC,wBAAyB,CAAEC,OAAQhB,MAGlD,gBAACiB,EAAD,KACGf,GACC,2BACE,qCACA,gBAAC,EAAAnC,KAAD,CAAMC,GAAIkC,EAAKD,OAAOQ,MAAtB,IAA8BP,EAAKJ,YAAYM,QAIlDD,GACC,2BACE,sCACA,gBAAC,EAAApC,KAAD,CAAMC,GAAImC,EAAKF,OAAOQ,MAAtB,IAA8BN,EAAKL,YAAYM,SAIrD,gBAAC,IAAD,CAAM1C,KAAMoC,EAAYpC,OACxB,gBAAC6B,EAAD,SAQFmB,EAAcpC,oBAAH,kEAAGA,CAAH,wIASXqC,EAAYrC,mBAAH,gEAAGA,CAAH,gCAITsC,EAAWtC,qBAAH,+DAAGA,CAAH,0EAMRwC,EAAcxC,wBAAH,kEAAGA,CAAH,8jBA2DX2C,EAAiB3C,oBAAH,qEAAGA,CAAH","file":"component---src-templates-post-template-js-505940463cb15a6e834f.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst toKebabCase = (str) => {\n  return str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n};\n\nconst Tags = ({ tags }) => {\n  return (\n    <div>\n      {tags &&\n        tags.map((tag) => {\n          return (\n            <Tag key={tag}>\n              <Link to={`/tags/${toKebabCase(tag)}`}>{tag}</Link>\n            </Tag>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default Tags;\n\nconst Tag = styled.span`\n  margin-right: 0.6rem;\n  margin-bottom: 0.6rem;\n  text-transform: uppercase;\n  font-size: var(--size-300);\n\n  & a {\n    position: relative;\n    z-index: 2;\n    background-color: rgba(255, 255, 255, 0.7);\n    text-decoration: none;\n    color: inherit;\n    padding: 0.2rem 0.6rem;\n    border: 1px solid rgba(255, 255, 255, 1);\n    border-radius: 4px;\n  }\n\n  & a:hover {\n    background-color: rgba(255, 255, 255, 0.9);\n  }\n`;\n","import { useEffect } from 'react';\nconst useImportScript = ({resourceUrl, attrs }) => {\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = resourceUrl;\n    Object.keys(attrs || {}).forEach(attr => {\n        script.setAttribute(attr, attrs[attr]);\n    });\n    script.async = true;\n    document.body.appendChild(script);\nreturn () => {\n      document.body.removeChild(script);\n    }\n  }, [resourceUrl, attrs]);\n};\nexport default useImportScript;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport styled from 'styled-components';\nimport Tags from '../components/tags';\nimport useImportScript from '../components/importScript';\n\nconst Isso = props => {\n  const issoHost = 'https://isso.deeonis.ru/';\n\n  useImportScript({\n    resourceUrl: `${issoHost}js/embed.min.js`,\n    attrs: {'data-isso': issoHost,\n            'data-isso-require-author': true\n          }\n  });\n\n  return <section id=\"isso-thread\"></section>\n}\n\nconst PostTemplate = ({ data }) => {\n  const { frontmatter, excerpt, html, fields } = data.markdownRemark;\n  const prev = data.prev;\n  const next = data.next;\n\n  return (\n    <Layout\n      title={frontmatter.title}\n      description={frontmatter.description || excerpt}\n      socialImage={\n        frontmatter.social_image ? frontmatter.social_image.publicURL : fields.slug + 'og-image.jpg'\n      }\n    >\n      <PostWrapper>\n        <article>\n          <PostTitle>{frontmatter.title}</PostTitle>\n          <PostDate>{frontmatter.date}</PostDate>\n\n          <PostContent dangerouslySetInnerHTML={{ __html: html }} />\n        </article>\n\n        <PostPagination>\n          {prev && (\n            <div>\n              <span>назад</span>\n              <Link to={prev.fields.slug}> {prev.frontmatter.title}</Link>\n            </div>\n          )}\n\n          {next && (\n            <div>\n              <span>дальше</span>\n              <Link to={next.fields.slug}> {next.frontmatter.title}</Link>\n            </div>\n          )}\n        </PostPagination>\n        <Tags tags={frontmatter.tags} />\n        <Isso/>\n      </PostWrapper>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n\nconst PostWrapper = styled.div`\n  padding-top: var(--size-900);\n  padding-bottom: var(--size-900);\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 70ch;\n  word-wrap: break-word;\n`;\n\nconst PostTitle = styled.h1`\n  font-size: var(--size-700);\n`;\n\nconst PostDate = styled.span`\n  font-size: var(--size-400);\n  padding-top: 1rem;\n  text-transform: uppercase;\n`;\n\nconst PostContent = styled.section`\n  padding-top: var(--size-800);\n\n  & > * + * {\n    margin-top: var(--size-300);\n  }\n\n  & > p + p {\n    margin-top: var(--size-700);\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    margin-top: var(--size-900);\n  }\n\n  h1 {\n    font-size: var(--size-700);\n  }\n\n  h2 {\n    font-size: var(--size-600);\n  }\n\n  h3 {\n    font-size: var(--size-500);\n  }\n\n  b,\n  strong {\n    font-weight: 600;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: underline;\n    text-decoration-thickness: 0.125rem;\n  }\n\n  blockquote {\n    padding-left: var(--size-400);\n    border-left: 5px solid;\n    font-style: italic;\n  }\n\n  code {\n    font-family: 'Source Sans Pro', monospace;\n    overflow-x: auto;\n    white-space: pre-wrap;\n  }\n\n  pre {\n    overflow-x: auto;\n    white-space: pre-wrap;\n    max-width: 100%;\n  }\n`;\n\nconst PostPagination = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: var(--size-900);\n\n  & > * {\n    position: relative;\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    padding-top: 0.5rem;\n    padding-bottom: 0.5rem;\n    border-radius: 8px;\n    border: 1px solid rgba(255, 255, 255, 0.5);\n    background-color: rgba(255, 255, 255, 0.3);\n    backdrop-filter: blur(10px);\n    margin: 0.5rem;\n  }\n\n  & > *:hover {\n    background-color: rgba(255, 255, 255, 0.5);\n  }\n\n  & span {\n    text-transform: uppercase;\n    opacity: 0.6;\n    font-size: var(--size-400);\n    padding-bottom: var(--size-500);\n  }\n\n  & a {\n    color: inherit;\n    text-decoration: none;\n    font-size: var(--size-400);\n\n  }\n\n  & a::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n  }\n`;\n\nexport const pageQuery = graphql`\n  query PostBySlug($slug: String!, $prevSlug: String, $nextSlug: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      fields {\n        slug\n      }\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        tags\n        date(formatString: \"DD MMMM, YYYY\", locale: \"ru\")\n        description\n        social_image {\n          publicURL\n        }\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}